// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#include "model.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace anx {
PROTOBUF_CONSTEXPR ModelMeta::ModelMeta(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.input_dims_)*/ {}
  ,/* _impl_._input_dims_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.output_dims_)*/ {}
  ,/* _impl_._output_dims_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_.input_dtype_)*/ 0u

  , /*decltype(_impl_.output_dtype_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ModelMetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelMetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelMetaDefaultTypeInternal() {}
  union {
    ModelMeta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelMetaDefaultTypeInternal _ModelMeta_default_instance_;
}  // namespace anx
static ::_pb::Metadata file_level_metadata_model_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_model_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_model_2eproto = nullptr;
const ::uint32_t TableStruct_model_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::anx::ModelMeta, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::anx::ModelMeta, _impl_.input_dims_),
    PROTOBUF_FIELD_OFFSET(::anx::ModelMeta, _impl_.input_dtype_),
    PROTOBUF_FIELD_OFFSET(::anx::ModelMeta, _impl_.output_dims_),
    PROTOBUF_FIELD_OFFSET(::anx::ModelMeta, _impl_.output_dtype_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::anx::ModelMeta)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::anx::_ModelMeta_default_instance_._instance,
};
const char descriptor_table_protodef_model_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013model.proto\022\003anx\032\014common.proto\"_\n\tMode"
    "lMeta\022\022\n\ninput_dims\030\001 \003(\005\022\023\n\013input_dtype"
    "\030\002 \001(\r\022\023\n\013output_dims\030\003 \003(\005\022\024\n\014output_dt"
    "ype\030\004 \001(\rB\033\n\031com.flomobility.anx.protob\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_model_2eproto_deps[1] =
    {
        &::descriptor_table_common_2eproto,
};
static ::absl::once_flag descriptor_table_model_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_model_2eproto = {
    false,
    false,
    166,
    descriptor_table_protodef_model_2eproto,
    "model.proto",
    &descriptor_table_model_2eproto_once,
    descriptor_table_model_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_model_2eproto::offsets,
    file_level_metadata_model_2eproto,
    file_level_enum_descriptors_model_2eproto,
    file_level_service_descriptors_model_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_model_2eproto_getter() {
  return &descriptor_table_model_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_model_2eproto(&descriptor_table_model_2eproto);
namespace anx {
// ===================================================================

class ModelMeta::_Internal {
 public:
};

ModelMeta::ModelMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:anx.ModelMeta)
}
ModelMeta::ModelMeta(const ModelMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ModelMeta* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.input_dims_) { from._impl_.input_dims_ }
    ,/* _impl_._input_dims_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.output_dims_) { from._impl_.output_dims_ }
    ,/* _impl_._output_dims_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.input_dtype_) {}

    , decltype(_impl_.output_dtype_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.input_dtype_, &from._impl_.input_dtype_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.output_dtype_) -
    reinterpret_cast<char*>(&_impl_.input_dtype_)) + sizeof(_impl_.output_dtype_));
  // @@protoc_insertion_point(copy_constructor:anx.ModelMeta)
}

inline void ModelMeta::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.input_dims_) { arena }
    ,/* _impl_._input_dims_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.output_dims_) { arena }
    ,/* _impl_._output_dims_cached_byte_size_ = */ { 0 }

    , decltype(_impl_.input_dtype_) { 0u }

    , decltype(_impl_.output_dtype_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ModelMeta::~ModelMeta() {
  // @@protoc_insertion_point(destructor:anx.ModelMeta)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ModelMeta::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.input_dims_.~RepeatedField();
  _impl_.output_dims_.~RepeatedField();
}

void ModelMeta::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ModelMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:anx.ModelMeta)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_dims_.Clear();
  _impl_.output_dims_.Clear();
  ::memset(&_impl_.input_dtype_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.output_dtype_) -
      reinterpret_cast<char*>(&_impl_.input_dtype_)) + sizeof(_impl_.output_dtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelMeta::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 input_dims = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_input_dims(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 8) {
          _internal_add_input_dims(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 input_dtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.input_dtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // repeated int32 output_dims = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_output_dims(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 24) {
          _internal_add_output_dims(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 output_dtype = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 32)) {
          _impl_.output_dtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ModelMeta::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:anx.ModelMeta)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 input_dims = 1;
  {
    int byte_size = _impl_._input_dims_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1, _internal_input_dims(),
                                                 byte_size, target);
    }
  }

  // uint32 input_dtype = 2;
  if (this->_internal_input_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_input_dtype(), target);
  }

  // repeated int32 output_dims = 3;
  {
    int byte_size = _impl_._output_dims_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(3, _internal_output_dims(),
                                                 byte_size, target);
    }
  }

  // uint32 output_dtype = 4;
  if (this->_internal_output_dtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_output_dtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:anx.ModelMeta)
  return target;
}

::size_t ModelMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:anx.ModelMeta)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 input_dims = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(this->_impl_.input_dims_)
    ;
    _impl_._input_dims_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // repeated int32 output_dims = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(this->_impl_.output_dims_)
    ;
    _impl_._output_dims_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  // uint32 input_dtype = 2;
  if (this->_internal_input_dtype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_input_dtype());
  }

  // uint32 output_dtype = 4;
  if (this->_internal_output_dtype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_output_dtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ModelMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelMeta::GetClassData() const { return &_class_data_; }


void ModelMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ModelMeta*>(&to_msg);
  auto& from = static_cast<const ModelMeta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:anx.ModelMeta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.input_dims_.MergeFrom(from._impl_.input_dims_);
  _this->_impl_.output_dims_.MergeFrom(from._impl_.output_dims_);
  if (from._internal_input_dtype() != 0) {
    _this->_internal_set_input_dtype(from._internal_input_dtype());
  }
  if (from._internal_output_dtype() != 0) {
    _this->_internal_set_output_dtype(from._internal_output_dtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelMeta::CopyFrom(const ModelMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:anx.ModelMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelMeta::IsInitialized() const {
  return true;
}

void ModelMeta::InternalSwap(ModelMeta* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input_dims_.InternalSwap(&other->_impl_.input_dims_);
  _impl_.output_dims_.InternalSwap(&other->_impl_.output_dims_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelMeta, _impl_.output_dtype_)
      + sizeof(ModelMeta::_impl_.output_dtype_)
      - PROTOBUF_FIELD_OFFSET(ModelMeta, _impl_.input_dtype_)>(
          reinterpret_cast<char*>(&_impl_.input_dtype_),
          reinterpret_cast<char*>(&other->_impl_.input_dtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelMeta::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_model_2eproto_getter, &descriptor_table_model_2eproto_once,
      file_level_metadata_model_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace anx
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::anx::ModelMeta*
Arena::CreateMaybeMessage< ::anx::ModelMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::anx::ModelMeta >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
